{"version":3,"sources":["GoodsList.tsx","api/goods.ts","types/Button.tsx","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","className","cn","red","color","green","blue","name","id","getAll","fetch","then","response","json","Button","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","_useState4","typeButton","setTypeButton","useEffect","All","goodsItem","Five","sort","a","b","localeCompare","slice","Red","filter","_jsxs","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8OAQaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAACC,GAAI,OACdH,cAAA,MAEE,UAAQ,OACRI,UAAWC,IAAG,CACZC,IAAoB,QAAfH,EAAKI,MACVC,MAAsB,UAAfL,EAAKI,MACZE,KAAqB,SAAfN,EAAKI,QACVN,SAEFE,EAAKO,MARDP,EAAKQ,GASP,KAEJ,EClBA,SAASC,IACd,OAAOC,MAHI,yEAGWC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,GAC1D,CAEO,ICTKC,EAAM,SAANA,GAAM,OAANA,IAAM,aAANA,IAAM,eAANA,IAAM,aAANA,CAAM,MCWLC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCpB,EAAKsB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAoCJ,mBAAwB,MAAKK,EAAAH,YAAAE,EAAA,GAA1DE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GA0BhC,OAxBAG,qBAAU,WACR,GAAmB,OAAfF,EACF,OAAQA,GACN,KAAKT,EAAOY,IACVjB,IAASE,MAAK,SAACgB,GACbP,EAASO,EACX,IACA,MACF,KAAKb,EAAOc,KFbXnB,IAASE,MACd,SAACf,GAAK,OAAKA,EAAMiC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEvB,KAAKyB,cAAcD,EAAExB,KAAK,IACzD0B,MAAM,EAAG,EAAE,IEYItB,MAAK,SAACgB,GAChBP,EAASO,EACX,IACA,MACF,KAAKb,EAAOoB,IFXXzB,IAASE,MAAK,SAACf,GAAK,OAAKA,EAAMuC,QAAO,SAACnC,GAAI,MAAoB,QAAfA,EAAKI,KAAe,GAAC,IEYtDO,MAAK,SAACgB,GAClBP,EAASO,EACX,IAMR,GAAG,CAACJ,IAGFa,eAAA,OAAKnC,UAAU,MAAKH,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEwC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMd,EAAcV,EAAOY,IAAI,EAAC5B,SAC1C,mBAIDD,cAAA,UACEwC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMd,EAAcV,EAAOc,KAAK,EAAC9B,SAC3C,uBAIDD,cAAA,UACEwC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMd,EAAcV,EAAOoB,IAAI,EAACpC,SAC1C,mBAIDD,cAACH,EAAS,CAACE,MAAOA,MAGxB,ECnEA2C,IAASC,OACP3C,cAACkB,EAAG,IACJ0B,SAASC,eAAe,Q","file":"static/js/main.5256e70d.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={cn({\n          red: good.color === 'red',\n          green: good.color === 'green',\n          blue: good.color === 'blue',\n        })}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL).then((response) => response.json());\n}\n\nexport const get5First = () => {\n  return getAll().then(\n    (goods) => goods.sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5),\n  ); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll().then((goods) => goods.filter((good) => good.color === 'red')); // get only red\n};\n","export enum Button {\n  All,\n  Five,\n  Red,\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\nimport { Button } from './types/Button';\n\n// import { getAll, get5First, getRed } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [typeButton, setTypeButton] = useState<Button | null>(null);\n\n  useEffect(() => {\n    if (typeButton !== null) {\n      switch (typeButton) {\n        case Button.All:\n          getAll().then((goodsItem) => {\n            setGoods(goodsItem);\n          });\n          break;\n        case Button.Five:\n          get5First().then((goodsItem) => {\n            setGoods(goodsItem);\n          });\n          break;\n        case Button.Red:\n          getRedGoods().then((goodsItem) => {\n            setGoods(goodsItem);\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  }, [typeButton]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setTypeButton(Button.All)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setTypeButton(Button.Five)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setTypeButton(Button.Red)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}